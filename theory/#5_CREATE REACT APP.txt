
#5.0 Introduction

Create React App
: 리액트 어플리케이션을 만드는 최고의 방식

- 개발 서버에 접근한다든가
- 자동으로 새로고침을 시켜준다든가
- 즉각적으로 어플리케이션 안에 CSS를 포함시켜 준다든가

하는 기능들이 있음

node.js 다운로드 사이트
[nodejs.org](http://nodejs.org/)


window + R > cmd(명령 프롬프트)

  node -v // 버전 확인

  npx
  exit

  npx create-react-app horror // 다운로드

  code horror // vsc로 open


[package.json] 여길 보면
실행시킬 수 있는 <script>들이 있는 걸 확인할 수 있는데,
이것은 create-react-app 팀에 의해 만들어진 것들

vsc terminal

  npm start

그럼 개발용 서버를 만들게 되는데,
브라우저 창이 뜨는데 이게 바로 creat-react-app을 사용해서 어플리케이션을 만들었을 때 초기 버전임


[src 폴더]는 네 모든 파일들을 넣을 폴더
*가장 중요한 건 [index.js]


니콜라스랑 다른 점 1)

React-app이 업데이트되면서 영상 속 내용과 차이점이 생김.
ReactDOM.render 구문이 폐기되고, ReactDOM.createRoot 구문으로 대체됨.

필요 없는 부분 지운 index.js 코드

  import React from 'react';
  import ReactDOM from 'react-dom/client';
  import App from './App';

  const root = ReactDOM.createRoot(document.getElementById('root'));
  root.render(
    <React.StrictMode>
      <App />
    </React.StrictMode>,
  );

#5.0 댓글 [qmdlkojn1] (https://nomadcoders.co/users/qmdlkojn1)


니콜라스랑 다른 점 2)

react 콘솔창에서 <script>부분

  <script src="/static/js/bundle.js"></script>
  <script src="/static/js/vendors~main.chunk.js"></script>
  <script src="/static/js/main.chunk.js"></script>

나

  <script defer="" src="/static/js/bundle.js"></script>


필요 없는 부분 지운 App.js 코드

  function App() {
    return (
      <div>
        <h1>Welcome back!!!</h1>
      </div>
    );
  }

  export default App;


+) 우리는 한 파일당 한 컴포넌트를 가지고 있고, index.js에서 그 컴포넌트를 import시킴
   즉, 차후에 버튼과 같은 다른 컴포넌트도 한 개의 파일로 이루어질 거라는 걸 의미

∴ 이제 어플리케이션을 만들고 npm start를 실행 = 브라우저에 리액트 실행